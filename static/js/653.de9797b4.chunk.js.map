{"version":3,"file":"static/js/653.de9797b4.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,8BACzBA,IAAAA,SAAAA,QAAAA,KAAAA,gBAA8C,kCAE9C,IAAMC,EAAM,mCAENC,EAAQ,mCAAG,oGACQF,IAAAA,IAAA,uCAA0CC,IADlD,cACTE,EADS,yBAGRA,EAASC,MAHD,2CAAH,qDAMRC,EAAY,mCAAG,WAAMC,GAAN,uFACIN,IAAAA,IAAA,kBACVM,EADU,oBACIL,EADJ,oBADJ,cACbE,EADa,yBAIZA,EAASC,MAJG,2CAAH,sDAOZG,EAAe,mCAAG,WAAMD,GAAN,uFACCN,IAAAA,IAAA,kBACVM,EADU,4BACYL,EADZ,2BADD,cAChBE,EADgB,yBAIfA,EAASC,MAJM,2CAAH,sDAOfI,EAAgB,mCAAG,WAAMC,GAAN,uFACAT,IAAAA,IAAA,kCACMC,EADN,kBACmBQ,IAFnB,cACjBN,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOhBM,EAAa,mCAAG,WAAMJ,GAAN,uFACGN,IAAAA,IAAA,mBAAsBM,EAAtB,4BAA4CL,IAD/C,cACdE,EADc,yBAEbA,EAASC,MAFI,2CAAH,uD,6JChCnB,EAA2B,yB,SC4E3B,EAvEe,WACb,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCL,EAAAA,EAAAA,UAAS,IAA/C,eAAOM,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMZ,EAAQW,EAAaE,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,2FACET,GAAW,GADb,mBAG2BN,EAAAA,EAAAA,IAAiBC,GAH5C,OAGUN,EAHV,OAIIS,EAAQT,EAASqB,SAJrB,gDAMIC,QAAQC,IAAR,MANJ,yBAQIZ,GAAW,GARf,6EALc,sBACTL,GADS,mCAgBdkB,KACC,CAAClB,EAAOY,IAWX,OACE,gCACE,kBAAMO,OAAO,GAAGC,SAPC,SAAAC,GACnBA,EAAEC,iBACFV,EAAgB,CAAEZ,MAAOQ,KAKvB,WACE,kBACEe,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,KAAK,QACLC,SAjBS,SAAAN,GACfZ,EAAeY,EAAEO,cAAcC,MAAMC,cAAcC,YAkB/C,mBAAQR,KAAK,SAAb,wBAGF,0BACGnB,IACC,SAAC,KAAD,CACE4B,MAAM,MACNC,iBAAiB,OACjBC,kBAAkB,MAClBC,iBAAiB,SAGpBxC,EAAKyC,OAAS,GACbzC,EAAK0C,KAAI,gBAAGC,EAAH,EAAGA,eAAgBZ,EAAnB,EAAmBA,KAAM7B,EAAzB,EAAyBA,GAAzB,OACP,eAAa0C,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMC,GAAE,YAAO5C,GAAM6C,MAAO,CAAEC,KAAMrC,GAApC,gBACGgC,QADH,IACGA,EAAAA,EAAkBZ,KAFd7B","sources":["API/API.js","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\naxios.defaults.headers.post['Content-Type'] = 'application/json; charset=utf-8';\n\nconst KEY = '96dea35b5a4d6ccb61b77721fd102ef9';\n\nconst GetFilms = async () => {\n  const response = await axios.get(`3/trending/movie/day?api_key=${KEY}`);\n\n  return response.data;\n};\n\nconst getMovieById = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst getMovieReviews = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nconst getMoviesCast = async id => {\n  const response = await axios.get(`/3/movie/${id}/credits?api_key=${KEY}`);\n  return response.data;\n};\n\nexport {\n  GetFilms,\n  getMovieById,\n  getMoviesByQuery,\n  getMovieReviews,\n  getMoviesCast,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ListItem\":\"Movies_ListItem__BPI3k\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { getMoviesByQuery } from 'API';\nimport s from './Movies.module.css';\n\nconst Movies = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    async function fetchFilms() {\n      setLoading(true);\n      try {\n        const response = await getMoviesByQuery(query);\n        setData(response.results);\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchFilms();\n  }, [query, setSearchParams]);\n\n  const onChange = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n  };\n\n  return (\n    <section>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          name=\"query\"\n          onChange={onChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <ul>\n        {loading && (\n          <ThreeCircles\n            color=\"red\"\n            outerCircleColor=\"blue\"\n            middleCircleColor=\"red\"\n            innerCircleColor=\"grey\"\n          />\n        )}\n        {data.length > 0 &&\n          data.map(({ original_title, name, id }) => (\n            <li key={id} className={s.ListItem}>\n              <Link to={`./${id}`} state={{ from: location }}>\n                {original_title ?? name}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","KEY","GetFilms","response","data","getMovieById","id","getMovieReviews","getMoviesByQuery","query","getMoviesCast","useState","setData","loading","setLoading","location","useLocation","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","get","useEffect","results","console","log","fetchFilms","action","onSubmit","e","preventDefault","type","autoComplete","autoFocus","name","onChange","currentTarget","value","toLowerCase","trim","color","outerCircleColor","middleCircleColor","innerCircleColor","length","map","original_title","className","s","to","state","from"],"sourceRoot":""}