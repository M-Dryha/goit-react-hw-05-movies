{"version":3,"file":"static/js/992.026d6b29.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,8BACzBA,IAAAA,SAAAA,QAAAA,KAAAA,gBAA8C,kCAE9C,IAAMC,EAAM,mCAuBNC,EAAQ,mCAAG,oGACQF,IAAAA,IAAA,uCAA0CC,IADlD,cACTE,EADS,yBAGRA,EAASC,MAHD,2CAAH,qDAMRC,EAAY,mCAAG,WAAMC,GAAN,uFACIN,IAAAA,IAAA,kBACVM,EADU,oBACIL,EADJ,oBADJ,cACbE,EADa,yBAIZA,EAASC,MAJG,2CAAH,sDAOZG,EAAe,mCAAG,WAAMD,GAAN,uFACCN,IAAAA,IAAA,kBACVM,EADU,4BACYL,EADZ,2BADD,cAChBE,EADgB,yBAIfA,EAASC,MAJM,2CAAH,sDAOfI,EAAgB,mCAAG,WAAMC,GAAN,uFACAT,IAAAA,IAAA,kCACMC,EADN,qDACsDQ,IAFtD,cACjBN,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOhBM,EAAa,mCAAG,WAAMJ,GAAN,uFACGN,IAAAA,IAAA,mBAAsBM,EAAtB,4BAA4CL,IAD/C,cACdE,EADc,yBAEbA,EAASC,MAFI,2CAAH,uD,uKCrDnB,GAAgB,cAAgB,oCAAoC,MAAQ,4BAA4B,UAAY,gCAAgC,WAAa,iCAAiC,WAAa,iCAAiC,YAAc,kCAAkC,YAAc,mC,SC2F9S,EApFqB,WAAO,IAAD,IACjBO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAiB1C,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEN,GAAW,GADb,mBAGiCZ,EAAAA,EAAAA,IAAaM,GAH9C,OAGUa,EAHV,OAIIT,EAAQS,GAJZ,gDAMIC,QAAQC,IAAR,MANJ,yBAQIT,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdU,KACC,CAAChB,KAGF,kBAAMiB,UAAWC,EAAAA,cAAjB,UACGb,IACC,SAAC,KAAD,CACEc,MAAM,MACNC,iBAAiB,OACjBC,kBAAkB,MAClBC,iBAAiB,UAGrB,SAAC,KAAD,CAAMC,GAAId,EAAV,uBACCN,IACC,qBAASc,UAAWC,EAAAA,UAApB,WACE,gBAAKD,UAAWC,EAAAA,WAAhB,UACE,gBACED,UAAWC,EAAAA,MACXM,IACErB,EAAKsB,YAAL,yCACsCtB,EAAKsB,aACvCC,EAENC,IAAKxB,EAAKyB,oBAGd,4BACE,8BAAMzB,EAAKyB,mBACX,yCAAqC,GAApBzB,EAAK0B,aAAtB,OACC1B,IACC,4BACE,oCACA,eAAIc,UAAWC,EAAAA,WAAf,SACGf,EAAK2B,OAAOC,KAAI,SAAAC,GAAK,OACpB,eAAqBf,UAAWC,EAAAA,YAAhC,SACGc,EAAMC,MADAD,EAAMC,eAOvB,4BACE,sCACA,6BAAK9B,EAAK+B,sBAKlB,oBAASjB,UAAWC,EAAAA,QAApB,UACE,iBAAKD,UAAWC,EAAAA,YAAhB,WACE,oDAEA,SAAC,KAAD,CAAMK,GAAE,OAAUvB,QAASA,EAA3B,mBAGA,SAAC,KAAD,CAAMuB,GAAE,UAAavB,QAASA,EAA9B,2BAKJ,SAAC,KAAD,S","sources":["API/API.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\naxios.defaults.headers.post['Content-Type'] = 'application/json; charset=utf-8';\n\nconst KEY = '96dea35b5a4d6ccb61b77721fd102ef9';\n// const GetGenres = async () => {\n//   const response = await axios.get(\n//     `3/genre/movie/list?api_key=${KEY}&language=en-US`\n//   );\n//   return response.data;\n// };\n\n// export function GetFilms() {\n//   return axios\n//     .get(`3/trending/all/day?api_key=${KEY}`)\n//     .then(response => response.data);\n//   // console.log(response.data);\n// }\n\n// const GetFilms = async id => {\n//   const response = await axios.get(\n//     `3/movie/${id}?api_key=${KEY}&language=en-US`\n//   );\n\n//   return response.data;\n// };\n\nconst GetFilms = async () => {\n  const response = await axios.get(`3/trending/movie/day?api_key=${KEY}`);\n\n  return response.data;\n};\n\nconst getMovieById = async id => {\n  const response = await axios.get(\n    `3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst getMovieReviews = async id => {\n  const response = await axios.get(\n    `3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst getMoviesByQuery = async query => {\n  const response = await axios.get(\n    `/3/search/movie?api_key=${KEY}&language=en-US&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n\nconst getMoviesCast = async id => {\n  const response = await axios.get(`/3/movie/${id}/credits?api_key=${KEY}`);\n  return response.data;\n};\n\nexport {\n  GetFilms,\n  getMovieById,\n  getMoviesByQuery,\n  getMovieReviews,\n  getMoviesCast,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"MovieDetails_cardContainer__80lGT\",\"Image\":\"MovieDetails_Image__Gpymw\",\"Container\":\"MovieDetails_Container__RyaeD\",\"imageThumb\":\"MovieDetails_imageThumb__hm1qO\",\"genresList\":\"MovieDetails_genresList__iljfW\",\"movieGenres\":\"MovieDetails_movieGenres__TTLvJ\",\"information\":\"MovieDetails_information__vmdmd\"};","import { useState, useEffect } from 'react';\nimport { getMovieById } from 'API';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport placeHolder from '../../data/no-image.jpg';\nimport s from './MovieDetails.module.css';\n// import Reviews from '../Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchFilm() {\n      setLoading(true);\n      try {\n        const getFilmDetails = await getMovieById(movieId);\n        setFilm(getFilmDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchFilm();\n  }, [movieId]);\n\n  return (\n    <main className={s.cardContainer}>\n      {loading && (\n        <ThreeCircles\n          color=\"red\"\n          outerCircleColor=\"blue\"\n          middleCircleColor=\"red\"\n          innerCircleColor=\"grey\"\n        />\n      )}\n      <Link to={backLink}> Go back </Link>\n      {film && (\n        <section className={s.Container}>\n          <div className={s.imageThumb}>\n            <img\n              className={s.Image}\n              src={\n                film.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${film.poster_path}`\n                  : placeHolder\n              }\n              alt={film.original_title}\n            />\n          </div>\n          <div>\n            <h2> {film.original_title}</h2>\n            <p> User Score: {film.vote_average * 10}%</p>\n            {film && (\n              <div>\n                <h3>Genres</h3>\n                <ul className={s.genresList}>\n                  {film.genres.map(genre => (\n                    <li key={genre.name} className={s.movieGenres}>\n                      {genre.name}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            <div>\n              <h3>Overview</h3>\n              <p> {film.overview}</p>\n            </div>\n          </div>\n        </section>\n      )}\n      <section className={s.section}>\n        <div className={s.information}>\n          <h3>Additional information</h3>\n\n          <Link to={`cast`} movieId={movieId}>\n            Cast\n          </Link>\n          <Link to={`reviews`} movieId={movieId}>\n            Reviews\n          </Link>\n        </div>\n      </section>\n      <Outlet />\n    </main>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","KEY","GetFilms","response","data","getMovieById","id","getMovieReviews","getMoviesByQuery","query","getMoviesCast","movieId","useParams","useState","film","setFilm","loading","setLoading","location","useLocation","backLink","state","from","useEffect","getFilmDetails","console","log","fetchFilm","className","s","color","outerCircleColor","middleCircleColor","innerCircleColor","to","src","poster_path","placeHolder","alt","original_title","vote_average","genres","map","genre","name","overview"],"sourceRoot":""}